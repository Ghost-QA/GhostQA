version: '3.8'

services:
  webui:
      build:
        context: .
        dockerfile: ./seleniumreact_app/Dockerfile
      ports:
        - "3000:80"
      # volumes:
        # - ./src:/app/src
        # - ./public:/app/public
      environment:
        - NODE_ENV=production
      stdin_open: true
  
  dotnetapi:
    build:
      context: .
      dockerfile: SeleniumReportAPI\Dockerfile
    ports:
      - "5000:80"
    environment:
      - ConnectionStrings__AppDBContextConnection=Server=db;Database=GhostQA;User=sa;Password=P@ssw0rd@123###
    command: dotnet SeleniumReportAPI.dll
    depends_on:
      - db
      - migrations
    extra_hosts:
      - host.docker.internal:host-gateway
      
  migrations:
    build:
      context: .
      dockerfile: SeleniumReportAPI\Dockerfile.migrations
    command: "/src/migrations.sh"
    ports:
      - "5001:80"
    depends_on:
      - db
    environment:
      - ConnectionStrings__AppDBContextConnection=Server=db;Database=GhostQA;User=sa;Password=P@ssw0rd@123###;


  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1435:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "P@ssw0rd@123###"
    hostname: db
    container_name: db
    restart: unless-stopped
    volumes:
      - ./ms_data/data:/var/opt/mssql/data
      - ./ms_data/log:/var/opt/mssql/log
      - ./ms_data/secrets:/var/opt/mssql/secrets
    healthcheck:
      test: ["CMD", "sqlcmd", "-U", "sa", "-P", "P@ssw0rd@123###", "-Q", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  
  caddy:
    build:
      context: .
      dockerfile: ./compose/caddy/Dockerfile
    ports:
      - "30001:30001"
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  ms_data: