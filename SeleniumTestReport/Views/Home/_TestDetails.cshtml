@model IEnumerable<SeleniumTestReport.DTO_s.Dto_TestRunDetails>
<html>
<head>
    <style>
        .video-frame {
            overflow: hidden;
            margin-bottom: 10px;
        }

        .inner {
            transform: rotate(45deg);
            background-color: silver;
            width: 50px;
            height: 50px;
            border-radius: 10px;
            margin-top: 9px;
        }

        .outer {
            overflow: hidden;
            width: 60px;
            height: 70px;
        }

        .btn_rotate {
            transform: rotate(315deg);
            font-weight: 600;
        }

        .title {
            background-color: silver;
            padding: 1px;
            font-weight:600;
        }
    </style>
</head>
<body>
    <div class="float-lg-start">
        <div class="title">
            <p>@ViewBag.PageTitle</p>
        </div>
    </div>
    <div class="float-end outer">
        <div class="float-end inner">
            <button type="button" class="btn btn_rotate" onclick="Back()">Back</button>
        </div>
    </div>
    <div class="row">
        <div class="card col-md-5" style="margin-left:10px;">
            <canvas id="testCaseChart"></canvas>
            <script>
            var xValues = ["Passed", "Failed"];
            var yValues = [@ViewBag.PassedCase, @ViewBag.FailedCase];
            var barColors = [
                "Green",
                "Maroon"
            ];

            new Chart("testCaseChart", {
                type: "doughnut",
                data: {
                    labels: xValues,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Test Case Details Chart"
                    }
                }
            });
            </script>
        </div>

    </div>
    <div class="row">
        <div class="accordion">
            @{
                if (Model != null)
                {
                    <div class="row border font-monospace mt-2 p-2" style="background-color: gainsboro;">
                        <div class="col-md-2 border p-1">Test Case Name</div>
                        <div class="col-md-2 border p-1">Status</div>
                        <div class="col-md-2 border p-1">Failure Message</div>
                        <div class="col-md-2 border p-1">Failure ScreenShot</div>
                        <div class="col-md-2 border p-1">Start Date Time</div>
                        <div class="col-md-2 border p-1">End Date Time</div>
                    </div>
                    foreach (var item in Model)
                    {
                        <div class="date mb-1 row" onclick="toggleContent('@item.TestCaseName.Replace(" ", "")')">
                            <div class="col-md-2">@item.TestCaseName</div>
                            <div class="col-md-2">@item.TestRunStatus</div>
                            <div class="col-md-2">@item.TestFailureMessage</div>
                            <div class="col-md-2">@item.TestFailureScreenShot</div>
                            <div class="col-md-2">@item.TestStartDate</div>
                            <div class="col-md-2">@item.TestEndDate</div>
                        </div>
                        var teststeps = Newtonsoft.Json.JsonConvert.DeserializeObject<List<SeleniumTestReport.DTO_s.Dto_TestSteps>>(item.TestSteps);
                        <div class="ml-3 row content" id="@item.TestCaseName.Replace(" ","")">
                            <div class="d-flex">
                                <div class="col-md-5">
                                    @{
                                        if (teststeps != null)
                                        {
                                            <div class="row border font-monospace mt-2 p-2" style="background-color: gainsboro;">
                                                <div class="col-md-3 border p-1">Status</div>
                                                <div class="col-md-3 border p-1">Time Stamp</div>
                                                <div class="col-md-5 border p-1">Details</div>
                                            </div>
                                            foreach (var steps in teststeps)
                                            {
                                                DateTime dateTime = DateTime.Parse(@steps.TimeStamp);
                                                <div class="mb-1 row">
                                                    <div class="col-md-3">@steps.Status</div>
                                                    <div class="col-md-3">@dateTime.ToString("HH:mm:ss")</div>
                                                    <div class="col-md-5">@steps.Details</div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                                <div class="col-md-6 w-100">
                                    <div class="video-frame">
                                        <iframe id="player2" src="https://www.youtube.com/embed/cs1e0fRyI18" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</body>
</html>
